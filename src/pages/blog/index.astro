---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog');
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const categories = ['Todos', 'Cloud', 'Desarrollo', 'Analítica', 'Tecnología', 'Innovación'];
---

<Layout title="Blog - CM Consulting">
  <div class="min-h-screen bg-gray-50 py-20">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl font-bold text-center text-corporate-blue mb-8">Blog</h1>
      
      <!-- Search Bar -->
      <div class="max-w-2xl mx-auto mb-12">
        <div class="relative">
          <input 
            type="text" 
            id="searchInput"
            placeholder="Buscar artículos..." 
            class="w-full px-4 py-3 rounded-lg border-2 border-gray-200 focus:border-corporate-blue focus:ring-2 focus:ring-corporate-blue/20 transition-all pl-12"
          >
          <svg class="w-6 h-6 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
      </div>

      <!-- Categories -->
      <div class="flex flex-wrap justify-center gap-4 mb-12">
        {categories.map((category) => (
          <button
            class="category-btn px-6 py-2 rounded-full border-2 border-corporate-blue text-corporate-blue hover:bg-corporate-blue hover:text-white transition-all"
            data-category={category}
          >
            {category}
          </button>
        ))}
      </div>

      <!-- Blog Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="blogGrid">
        {posts.map((post) => (
          <article class="blog-card bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-all transform hover:scale-[1.02]" data-categories={post.data.categories?.join(',')}>
            <div class="relative">
              <img 
                src={post.data.image} 
                alt={post.data.title}
                class="w-full h-48 object-cover"
              />
              <div class="absolute top-4 right-4 flex gap-2">
                {post.data.categories?.map((category) => (
                  <span class="bg-corporate-blue/80 text-white text-sm px-3 py-1 rounded-full backdrop-blur-sm">
                    {category}
                  </span>
                ))}
              </div>
            </div>
            <div class="p-6">
              <h2 class="text-xl font-semibold mb-2 line-clamp-2">
                <a href={`/blog/${post.slug}`} class="text-gray-900 hover:text-corporate-blue">
                  {post.data.title}
                </a>
              </h2>
              <p class="text-gray-600 mb-4 line-clamp-3">{post.data.description}</p>
              <div class="flex items-center justify-between text-sm text-gray-500">
                <div class="flex items-center">
                  <img 
                    src={post.data.authorImage || '/images/default-avatar.png'} 
                    alt={post.data.author}
                    class="w-8 h-8 rounded-full mr-2 object-cover"
                  />
                  <span>{post.data.author}</span>
                </div>
                <time datetime={post.data.pubDate.toISOString()}>
                  {new Date(post.data.pubDate).toLocaleDateString('es-ES', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </time>
              </div>
            </div>
          </article>
        ))}
      </div>

      <!-- Newsletter Subscription -->
      <div class="max-w-2xl mx-auto mt-20 bg-corporate-blue rounded-lg shadow-xl p-8 text-white">
        <h3 class="text-2xl font-bold mb-4">Suscríbete a nuestro newsletter</h3>
        <p class="mb-6">Recibe las últimas actualizaciones y artículos directamente en tu correo.</p>
        <form id="newsletterForm" class="flex gap-4">
          <input
            type="email"
            placeholder="Tu correo electrónico"
            required
            class="flex-1 px-4 py-2 rounded-lg text-gray-900"
          >
          <button type="submit" class="bg-corporate-yellow text-corporate-blue px-6 py-2 rounded-lg font-semibold hover:bg-opacity-90 transition-colors">
            Suscribirse
          </button>
        </form>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Search functionality
  const searchInput = document.getElementById('searchInput');
  const blogCards = document.querySelectorAll('.blog-card');

  searchInput?.addEventListener('input', (e) => {
    const searchTerm = e.target.value.toLowerCase();
    
    blogCards.forEach(card => {
      const title = card.querySelector('h2')?.textContent?.toLowerCase() || '';
      const description = card.querySelector('p')?.textContent?.toLowerCase() || '';
      
      if (title.includes(searchTerm) || description.includes(searchTerm)) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  });

  // Category filtering
  const categoryButtons = document.querySelectorAll('.category-btn');
  
  categoryButtons.forEach(button => {
    button.addEventListener('click', () => {
      const selectedCategory = button.dataset.category;
      
      // Toggle active state
      categoryButtons.forEach(btn => btn.classList.remove('bg-corporate-blue', 'text-white'));
      button.classList.add('bg-corporate-blue', 'text-white');
      
      blogCards.forEach(card => {
        if (selectedCategory === 'Todos') {
          card.style.display = 'block';
          return;
        }
        
        const cardCategories = card.dataset.categories?.split(',') || [];
        card.style.display = cardCategories.includes(selectedCategory) ? 'block' : 'none';
      });
    });
  });

  // Newsletter subscription
  document.getElementById('newsletterForm')?.addEventListener('submit', (e) => {
    e.preventDefault();
    const email = e.target.querySelector('input[type="email"]').value;
    
    // Here you would typically send this to your backend
    console.log('Newsletter subscription:', email);
    
    alert('¡Gracias por suscribirte! Recibirás nuestras actualizaciones pronto.');
    e.target.reset();
  });
</script>