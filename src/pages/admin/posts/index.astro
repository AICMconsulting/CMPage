---
import Layout from '../../../layouts/AdminLayout.astro';
import { getAllPosts } from '../../../db/blog';

if (!Astro.cookies.get('adminToken')) {
  return Astro.redirect('/admin/login');
}

const posts = await getAllPosts();
---

<Layout title="Gestión de Posts">
  <div class="p-6">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Posts</h1>
      <a
        href="/admin/posts/new"
        class="bg-corporate-blue text-white px-4 py-2 rounded-lg hover:bg-corporate-blue/90 transition-colors"
      >
        Nuevo Post
      </a>
    </div>

    <div class="bg-white rounded-lg shadow overflow-hidden">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Título
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Autor
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Fecha
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Estado
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Acciones
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {posts.map((post) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">{post.Title}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-500">{post.Author}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-500">
                  {new Date(post.PublishedDate).toLocaleDateString()}
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span
                  class={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
                    post.IsPublished
                      ? 'bg-green-100 text-green-800'
                      : 'bg-yellow-100 text-yellow-800'
                  }`}
                >
                  {post.IsPublished ? 'Publicado' : 'Borrador'}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <a
                  href={`/admin/posts/${post.Id}/edit`}
                  class="text-corporate-blue hover:text-corporate-yellow mr-4"
                >
                  Editar
                </a>
                <button
                  class="text-red-600 hover:text-red-900 delete-post"
                  data-post-id={post.Id}
                >
                  Eliminar
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</Layout>

<script>
  document.querySelectorAll('.delete-post').forEach((button) => {
    button.addEventListener('click', async (e) => {
      const postId = e.target.dataset.postId;
      
      if (confirm('¿Estás seguro de que deseas eliminar este post?')) {
        try {
          const response = await fetch(`/api/posts/${postId}`, {
            method: 'DELETE',
          });
          
          if (response.ok) {
            window.location.reload();
          } else {
            alert('Error al eliminar el post');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error al eliminar el post');
        }
      }
    });
  });
</script>